- name: "Fail when mc_version was not passed"
  ansible.builtin.fail:
    msg: 'You need to specify the variable mc_version! Either by setting it in ../vars/main.yaml of this role or using --extra-vars "mc_version=<VERSION>"! Abborting...'
  when: mc_version | length == 0

- name: "Print mc version which is used to install the server"
  ansible.builtin.debug:
    msg: 'Installing with mc_version: {{ mc_version }}'

- name: "Check and install apt requirements"
  ansible.builtin.import_tasks:
    file: "install_python_apt.yaml"

- name: "Update all repositories (apt update)"
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: "install needed packages for Mineraft Server using apt"
  ansible.builtin.apt:
    state: "present"
    name: "{{ item }}"
  become: true
  loop: "{{ apt_packages_list }}"
  when: ansible_facts.pkg_mgr == "apt"

- name: "Prepare the Mineraft Server environment"
  ansible.builtin.import_tasks:
    file: "prepare_server_environment.yaml"

- name: "Download Serverfile and install it"
  ansible.builtin.import_tasks:
    file: "download_serverfile_spiggot.yaml"

- name: "Setup cronjob"
  ansible.builtin.import_tasks:
    file: "setup_cronjobs.yaml"

- name: "Start Minecraft Server"
  ansible.builtin.import_tasks:
    file: "run_server.yaml"
